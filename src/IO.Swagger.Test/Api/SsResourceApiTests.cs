/* 
 * s4s-full
 *
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SsResourceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SsResourceApiTests
    {
        private SsResourceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SsResourceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SsResourceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SsResourceApi
            //Assert.IsInstanceOfType(typeof(SsResourceApi), instance, "instance is a SsResourceApi");
        }

        
        /// <summary>
        /// Test CustomerResourceGet
        /// </summary>
        [Test]
        public void CustomerResourceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string resourceid = null;
            //var response = instance.CustomerResourceGet(customerId, resourceid);
            //Assert.IsInstanceOf<long?> (response, "response is long?");
        }
        
        /// <summary>
        /// Test CustomerResourceLimitGet
        /// </summary>
        [Test]
        public void CustomerResourceLimitGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string resourceid = null;
            //var response = instance.CustomerResourceLimitGet(customerId, resourceid);
            //Assert.IsInstanceOf<long?> (response, "response is long?");
        }
        
        /// <summary>
        /// Test CustomerResourcePatch
        /// </summary>
        [Test]
        public void CustomerResourcePatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string resourceid = null;
            //ResourcePatch value = null;
            //var response = instance.CustomerResourcePatch(customerId, resourceid, value);
            //Assert.IsInstanceOf<ResourcePatchResult> (response, "response is ResourcePatchResult");
        }
        
        /// <summary>
        /// Test CustomerResourceProductGet
        /// </summary>
        [Test]
        public void CustomerResourceProductGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string resourceid = null;
            //string customerProductId = null;
            //var response = instance.CustomerResourceProductGet(customerId, resourceid, customerProductId);
            //Assert.IsInstanceOf<long?> (response, "response is long?");
        }
        
        /// <summary>
        /// Test CustomerResourceProductLimitGet
        /// </summary>
        [Test]
        public void CustomerResourceProductLimitGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string customerId = null;
            //string resourceid = null;
            //string customerProductId = null;
            //var response = instance.CustomerResourceProductLimitGet(customerId, resourceid, customerProductId);
            //Assert.IsInstanceOf<long?> (response, "response is long?");
        }
        
    }

}
