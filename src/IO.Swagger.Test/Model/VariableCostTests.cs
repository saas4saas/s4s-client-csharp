/* 
 * s4s-full
 *
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing VariableCost
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class VariableCostTests
    {
        // TODO uncomment below to declare an instance variable for VariableCost
        //private VariableCost instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of VariableCost
            //instance = new VariableCost();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VariableCost
        /// </summary>
        [Test]
        public void VariableCostInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" VariableCost
            //Assert.IsInstanceOfType<VariableCost> (instance, "variable 'instance' is a VariableCost");
        }

        /// <summary>
        /// Test the property 'ResourceId'
        /// </summary>
        [Test]
        public void ResourceIdTest()
        {
            // TODO unit test for the property 'ResourceId'
        }
        /// <summary>
        /// Test the property 'PerUnit'
        /// </summary>
        [Test]
        public void PerUnitTest()
        {
            // TODO unit test for the property 'PerUnit'
        }
        /// <summary>
        /// Test the property 'IntervalCost'
        /// </summary>
        [Test]
        public void IntervalCostTest()
        {
            // TODO unit test for the property 'IntervalCost'
        }
        /// <summary>
        /// Test the property 'IntervalPerUnit'
        /// </summary>
        [Test]
        public void IntervalPerUnitTest()
        {
            // TODO unit test for the property 'IntervalPerUnit'
        }
        /// <summary>
        /// Test the property 'Typ'
        /// </summary>
        [Test]
        public void TypTest()
        {
            // TODO unit test for the property 'Typ'
        }

    }

}
