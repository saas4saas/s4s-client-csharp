/* 
 * s4s-full
 *
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Model description
    /// </summary>
    [DataContract]
    public partial class PricingTablePlanCost :  IEquatable<PricingTablePlanCost>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PricingTablePlanCost" /> class.
        /// </summary>
        /// <param name="Description">Description.</param>
        /// <param name="Per">Per.</param>
        /// <param name="Bill">Bill.</param>
        /// <param name="Cost">Cost.</param>
        /// <param name="CostText">CostText.</param>
        /// <param name="Period">Period.</param>
        public PricingTablePlanCost(string Description = null, string Per = null, string Bill = null, Price Cost = null, string CostText = null, string Period = null)
        {
            this.Description = Description;
            this.Per = Per;
            this.Bill = Bill;
            this.Cost = Cost;
            this.CostText = CostText;
            this.Period = Period;
        }
        
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }
        /// <summary>
        /// Gets or Sets Per
        /// </summary>
        [DataMember(Name="per", EmitDefaultValue=false)]
        public string Per { get; set; }
        /// <summary>
        /// Gets or Sets Bill
        /// </summary>
        [DataMember(Name="bill", EmitDefaultValue=false)]
        public string Bill { get; set; }
        /// <summary>
        /// Gets or Sets Cost
        /// </summary>
        [DataMember(Name="cost", EmitDefaultValue=false)]
        public Price Cost { get; set; }
        /// <summary>
        /// Gets or Sets CostText
        /// </summary>
        [DataMember(Name="costText", EmitDefaultValue=false)]
        public string CostText { get; set; }
        /// <summary>
        /// Gets or Sets Period
        /// </summary>
        [DataMember(Name="period", EmitDefaultValue=false)]
        public string Period { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PricingTablePlanCost {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Per: ").Append(Per).Append("\n");
            sb.Append("  Bill: ").Append(Bill).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  CostText: ").Append(CostText).Append("\n");
            sb.Append("  Period: ").Append(Period).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PricingTablePlanCost);
        }

        /// <summary>
        /// Returns true if PricingTablePlanCost instances are equal
        /// </summary>
        /// <param name="other">Instance of PricingTablePlanCost to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PricingTablePlanCost other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Description == other.Description ||
                    this.Description != null &&
                    this.Description.Equals(other.Description)
                ) && 
                (
                    this.Per == other.Per ||
                    this.Per != null &&
                    this.Per.Equals(other.Per)
                ) && 
                (
                    this.Bill == other.Bill ||
                    this.Bill != null &&
                    this.Bill.Equals(other.Bill)
                ) && 
                (
                    this.Cost == other.Cost ||
                    this.Cost != null &&
                    this.Cost.Equals(other.Cost)
                ) && 
                (
                    this.CostText == other.CostText ||
                    this.CostText != null &&
                    this.CostText.Equals(other.CostText)
                ) && 
                (
                    this.Period == other.Period ||
                    this.Period != null &&
                    this.Period.Equals(other.Period)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Description != null)
                    hash = hash * 59 + this.Description.GetHashCode();
                if (this.Per != null)
                    hash = hash * 59 + this.Per.GetHashCode();
                if (this.Bill != null)
                    hash = hash * 59 + this.Bill.GetHashCode();
                if (this.Cost != null)
                    hash = hash * 59 + this.Cost.GetHashCode();
                if (this.CostText != null)
                    hash = hash * 59 + this.CostText.GetHashCode();
                if (this.Period != null)
                    hash = hash * 59 + this.Period.GetHashCode();
                return hash;
            }
        }
    }

}
