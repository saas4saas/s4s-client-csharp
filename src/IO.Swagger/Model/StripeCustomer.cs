/* 
 * s4s-full
 *
 * description
 *
 * OpenAPI spec version: stable
 * Contact: rui.p.oliveira@impactinglabs.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Model description
    /// </summary>
    [DataContract]
    public partial class StripeCustomer :  IEquatable<StripeCustomer>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StripeCustomer" /> class.
        /// </summary>
        /// <param name="CreditToken">CreditToken.</param>
        /// <param name="ClientId">ClientId.</param>
        /// <param name="DefaultCardLast4">DefaultCardLast4.</param>
        /// <param name="DefaultExpMonth">DefaultExpMonth.</param>
        /// <param name="DefaultExpYear">DefaultExpYear.</param>
        public StripeCustomer(string CreditToken = null, string ClientId = null, string DefaultCardLast4 = null, int? DefaultExpMonth = null, int? DefaultExpYear = null)
        {
            this.CreditToken = CreditToken;
            this.ClientId = ClientId;
            this.DefaultCardLast4 = DefaultCardLast4;
            this.DefaultExpMonth = DefaultExpMonth;
            this.DefaultExpYear = DefaultExpYear;
        }
        
        /// <summary>
        /// Gets or Sets CreditToken
        /// </summary>
        [DataMember(Name="creditToken", EmitDefaultValue=false)]
        public string CreditToken { get; set; }
        /// <summary>
        /// Gets or Sets ClientId
        /// </summary>
        [DataMember(Name="client_id", EmitDefaultValue=false)]
        public string ClientId { get; set; }
        /// <summary>
        /// Gets or Sets DefaultCardLast4
        /// </summary>
        [DataMember(Name="defaultCardLast4", EmitDefaultValue=false)]
        public string DefaultCardLast4 { get; set; }
        /// <summary>
        /// Gets or Sets DefaultExpMonth
        /// </summary>
        [DataMember(Name="defaultExpMonth", EmitDefaultValue=false)]
        public int? DefaultExpMonth { get; set; }
        /// <summary>
        /// Gets or Sets DefaultExpYear
        /// </summary>
        [DataMember(Name="defaultExpYear", EmitDefaultValue=false)]
        public int? DefaultExpYear { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StripeCustomer {\n");
            sb.Append("  CreditToken: ").Append(CreditToken).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  DefaultCardLast4: ").Append(DefaultCardLast4).Append("\n");
            sb.Append("  DefaultExpMonth: ").Append(DefaultExpMonth).Append("\n");
            sb.Append("  DefaultExpYear: ").Append(DefaultExpYear).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as StripeCustomer);
        }

        /// <summary>
        /// Returns true if StripeCustomer instances are equal
        /// </summary>
        /// <param name="other">Instance of StripeCustomer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StripeCustomer other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CreditToken == other.CreditToken ||
                    this.CreditToken != null &&
                    this.CreditToken.Equals(other.CreditToken)
                ) && 
                (
                    this.ClientId == other.ClientId ||
                    this.ClientId != null &&
                    this.ClientId.Equals(other.ClientId)
                ) && 
                (
                    this.DefaultCardLast4 == other.DefaultCardLast4 ||
                    this.DefaultCardLast4 != null &&
                    this.DefaultCardLast4.Equals(other.DefaultCardLast4)
                ) && 
                (
                    this.DefaultExpMonth == other.DefaultExpMonth ||
                    this.DefaultExpMonth != null &&
                    this.DefaultExpMonth.Equals(other.DefaultExpMonth)
                ) && 
                (
                    this.DefaultExpYear == other.DefaultExpYear ||
                    this.DefaultExpYear != null &&
                    this.DefaultExpYear.Equals(other.DefaultExpYear)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CreditToken != null)
                    hash = hash * 59 + this.CreditToken.GetHashCode();
                if (this.ClientId != null)
                    hash = hash * 59 + this.ClientId.GetHashCode();
                if (this.DefaultCardLast4 != null)
                    hash = hash * 59 + this.DefaultCardLast4.GetHashCode();
                if (this.DefaultExpMonth != null)
                    hash = hash * 59 + this.DefaultExpMonth.GetHashCode();
                if (this.DefaultExpYear != null)
                    hash = hash * 59 + this.DefaultExpYear.GetHashCode();
                return hash;
            }
        }
    }

}
